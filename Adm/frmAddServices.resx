<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bttnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>