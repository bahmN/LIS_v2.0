<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bttnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ww75LQAAAABJRU5ErkJggg==
</value>
  </data>
</root>