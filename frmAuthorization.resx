<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bttnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="bttnLookPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>